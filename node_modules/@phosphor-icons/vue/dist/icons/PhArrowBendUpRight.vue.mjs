import { defineComponent as m, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as A, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, M = /* @__PURE__ */ o("path", { d: "M232.49,112.49l-48,48a12,12,0,0,1-17-17L195,116H128a84.09,84.09,0,0,0-84,84,12,12,0,0,1-24,0A108.12,108.12,0,0,1,128,92h67L167.51,64.48a12,12,0,0,1,17-17l48,48A12,12,0,0,1,232.49,112.49Z" }, null, -1), L = [
  M
], k = { key: 1 }, Z = /* @__PURE__ */ o("path", {
  d: "M224,104l-48,48V56Z",
  opacity: "0.2"
}, null, -1), V = /* @__PURE__ */ o("path", { d: "M229.66,98.34l-48-48A8,8,0,0,0,168,56V96H128A104.11,104.11,0,0,0,24,200a8,8,0,0,0,16,0,88.1,88.1,0,0,1,88-88h40v40a8,8,0,0,0,13.66,5.66l48-48A8,8,0,0,0,229.66,98.34ZM184,132.69V75.31L212.69,104Z" }, null, -1), x = [
  Z,
  V
], H = { key: 2 }, S = /* @__PURE__ */ o("path", { d: "M229.66,109.66l-48,48A8,8,0,0,1,168,152V112H128a88.1,88.1,0,0,0-88,88,8,8,0,0,1-16,0A104.11,104.11,0,0,1,128,96h40V56a8,8,0,0,1,13.66-5.66l48,48A8,8,0,0,1,229.66,109.66Z" }, null, -1), z = [
  S
], B = { key: 3 }, C = /* @__PURE__ */ o("path", { d: "M228.24,108.24l-48,48a6,6,0,0,1-8.48-8.48L209.51,110H128a90.1,90.1,0,0,0-90,90,6,6,0,0,1-12,0A102.12,102.12,0,0,1,128,98h81.51L171.76,60.24a6,6,0,0,1,8.48-8.48l48,48A6,6,0,0,1,228.24,108.24Z" }, null, -1), N = [
  C
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M229.66,109.66l-48,48a8,8,0,0,1-11.32-11.32L204.69,112H128a88.1,88.1,0,0,0-88,88,8,8,0,0,1-16,0A104.11,104.11,0,0,1,128,96h76.69L170.34,61.66a8,8,0,0,1,11.32-11.32l48,48A8,8,0,0,1,229.66,109.66Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M226.83,106.83l-48,48a4,4,0,0,1-5.66-5.66L214.34,108H128a92.1,92.1,0,0,0-92,92,4,4,0,0,1-8,0A100.11,100.11,0,0,1,128,100h86.34L173.17,58.83a4,4,0,0,1,5.66-5.66l48,48A4,4,0,0,1,226.83,106.83Z" }, null, -1), j = [
  $
], R = {
  name: "PhArrowBendUpRight"
}, D = /* @__PURE__ */ m({
  ...R,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const l = d, c = n("weight", "regular"), h = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), s = i(() => l.weight ?? c), r = i(() => l.size ?? h), p = i(() => l.color ?? _), g = i(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (a, U) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: r.value,
      height: r.value,
      fill: p.value,
      transform: g.value
    }, a.$attrs), [
      y(a.$slots, "default"),
      s.value === "bold" ? (t(), e("g", w, L)) : s.value === "duotone" ? (t(), e("g", k, x)) : s.value === "fill" ? (t(), e("g", H, z)) : s.value === "light" ? (t(), e("g", B, N)) : s.value === "regular" ? (t(), e("g", b, P)) : s.value === "thin" ? (t(), e("g", W, j)) : A("", !0)
    ], 16, f));
  }
});
export {
  D as default
};
