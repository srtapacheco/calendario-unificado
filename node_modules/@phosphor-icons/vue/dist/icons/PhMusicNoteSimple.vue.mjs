import { defineComponent as m, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as A, renderSlot as v, createCommentVNode as y, createElementVNode as o } from "vue";
const M = ["width", "height", "fill", "transform"], V = { key: 0 }, f = /* @__PURE__ */ o("path", { d: "M211.45,52.51l-80-24A12,12,0,0,0,116,40V140.22A52,52,0,1,0,140,184V56.13l64.55,19.36a12,12,0,1,0,6.9-23ZM88,212a28,28,0,1,1,28-28A28,28,0,0,1,88,212Z" }, null, -1), Z = [
  f
], w = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M128,184a40,40,0,1,1-40-40A40,40,0,0,1,128,184Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M210.3,56.34l-80-24A8,8,0,0,0,120,40V148.26A48,48,0,1,0,136,184V50.75l69.7,20.91a8,8,0,1,0,4.6-15.32ZM88,216a32,32,0,1,1,32-32A32,32,0,0,1,88,216Z" }, null, -1), x = [
  k,
  S
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M210.3,56.34l-80-24A8,8,0,0,0,120,40V148.26A48,48,0,1,0,136,184V50.75l69.7,20.91a8,8,0,1,0,4.6-15.32Z" }, null, -1), B = [
  C
], N = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M209.72,58.25l-80-24A6,6,0,0,0,122,40V153.05A46,46,0,1,0,134,184V48.06l72.27,21.69a6,6,0,1,0,3.45-11.5ZM88,218a34,34,0,1,1,34-34A34,34,0,0,1,88,218Z" }, null, -1), E = [
  b
], P = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M210.3,56.34l-80-24A8,8,0,0,0,120,40V148.26A48,48,0,1,0,136,184V50.75l69.7,20.91a8,8,0,1,0,4.6-15.32ZM88,216a32,32,0,1,1,32-32A32,32,0,0,1,88,216Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M209.15,60.17l-80-24A4,4,0,0,0,124,40V158.75A44,44,0,1,0,132,184V45.38l74.85,22.45a4,4,0,0,0,2.3-7.66ZM88,220a36,36,0,1,1,36-36A36,36,0,0,1,88,220Z" }, null, -1), D = [
  q
], F = {
  name: "PhMusicNoteSimple"
}, I = /* @__PURE__ */ m({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const l = c, d = n("weight", "regular"), _ = n("size", "1em"), h = n("color", "currentColor"), u = n("mirrored", !1), s = i(() => l.weight ?? d), r = i(() => l.size ?? _), p = i(() => l.color ?? h), g = i(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (a, G) => (t(), e("svg", A({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: r.value,
      height: r.value,
      fill: p.value,
      transform: g.value
    }, a.$attrs), [
      v(a.$slots, "default"),
      s.value === "bold" ? (t(), e("g", V, Z)) : s.value === "duotone" ? (t(), e("g", w, x)) : s.value === "fill" ? (t(), e("g", z, B)) : s.value === "light" ? (t(), e("g", N, E)) : s.value === "regular" ? (t(), e("g", P, $)) : s.value === "thin" ? (t(), e("g", j, D)) : y("", !0)
    ], 16, M));
  }
});
export {
  I as default
};
