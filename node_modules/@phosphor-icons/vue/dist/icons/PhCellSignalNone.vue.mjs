import { defineComponent as v, inject as l, computed as i, openBlock as t, createElementBlock as e, mergeProps as m, renderSlot as y, createCommentVNode as f, createElementVNode as s } from "vue";
const w = ["width", "height", "fill", "transform"], M = { key: 0 }, k = /* @__PURE__ */ s("path", { d: "M52,192v8a12,12,0,0,1-24,0v-8a12,12,0,0,1,24,0Z" }, null, -1), Z = [
  k
], S = { key: 1 }, x = /* @__PURE__ */ s("path", { d: "M198.12,25.23a16,16,0,0,0-17.43,3.47l-160,160A16,16,0,0,0,32,216H192a16,16,0,0,0,16-16V40A16,16,0,0,0,198.12,25.23ZM192,200H32L192,40Z" }, null, -1), C = [
  x
], z = { key: 2 }, A = /* @__PURE__ */ s("path", { d: "M198.12,25.23a16,16,0,0,0-17.44,3.46l-160,160A16,16,0,0,0,32,216H192a16,16,0,0,0,16-16V40A15.94,15.94,0,0,0,198.12,25.23ZM192,200H32L192,40Z" }, null, -1), B = [
  A
], H = { key: 3 }, N = /* @__PURE__ */ s("path", { d: "M46,192v8a6,6,0,0,1-12,0v-8a6,6,0,0,1,12,0Z" }, null, -1), V = [
  N
], b = { key: 4 }, E = /* @__PURE__ */ s("path", { d: "M48,192v8a8,8,0,0,1-16,0v-8a8,8,0,0,1,16,0Z" }, null, -1), L = [
  E
], P = { key: 5 }, W = /* @__PURE__ */ s("path", { d: "M44,192v8a4,4,0,0,1-8,0v-8a4,4,0,0,1,8,0Z" }, null, -1), $ = [
  W
], j = {
  name: "PhCellSignalNone"
}, F = /* @__PURE__ */ v({
  ...j,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const n = d, c = l("weight", "regular"), _ = l("size", "1em"), h = l("color", "currentColor"), u = l("mirrored", !1), o = i(() => n.weight ?? c), r = i(() => n.size ?? _), p = i(() => n.color ?? h), g = i(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (a, q) => (t(), e("svg", m({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: r.value,
      height: r.value,
      fill: p.value,
      transform: g.value
    }, a.$attrs), [
      y(a.$slots, "default"),
      o.value === "bold" ? (t(), e("g", M, Z)) : o.value === "duotone" ? (t(), e("g", S, C)) : o.value === "fill" ? (t(), e("g", z, B)) : o.value === "light" ? (t(), e("g", H, V)) : o.value === "regular" ? (t(), e("g", b, L)) : o.value === "thin" ? (t(), e("g", P, $)) : f("", !0)
    ], 16, w));
  }
});
export {
  F as default
};
