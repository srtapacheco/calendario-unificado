import { defineComponent as g, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as V, renderSlot as A, createCommentVNode as v, createElementVNode as o } from "vue";
const y = ["width", "height", "fill", "transform"], f = { key: 0 }, H = /* @__PURE__ */ o("path", { d: "M184,28H72A20,20,0,0,0,52,48V224a12,12,0,0,0,18.36,10.18l57.63-36,57.65,36A12,12,0,0,0,204,224V48A20,20,0,0,0,184,28Zm-4,174.35-45.65-28.53a12,12,0,0,0-12.72,0L76,202.35V52H180Z" }, null, -1), Z = [
  H
], k = { key: 1 }, w = /* @__PURE__ */ o("path", {
  d: "M192,48V224l-64-40L64,224V48a8,8,0,0,1,8-8H184A8,8,0,0,1,192,48Z",
  opacity: "0.2"
}, null, -1), L = /* @__PURE__ */ o("path", { d: "M184,32H72A16,16,0,0,0,56,48V224a8,8,0,0,0,12.24,6.78L128,193.43l59.77,37.35A8,8,0,0,0,200,224V48A16,16,0,0,0,184,32Zm0,177.57-51.77-32.35a8,8,0,0,0-8.48,0L72,209.57V48H184Z" }, null, -1), M = [
  w,
  L
], S = { key: 2 }, x = /* @__PURE__ */ o("path", { d: "M184,32H72A16,16,0,0,0,56,48V224a8,8,0,0,0,12.24,6.78L128,193.43l59.77,37.35A8,8,0,0,0,200,224V48A16,16,0,0,0,184,32Z" }, null, -1), z = [
  x
], B = { key: 3 }, C = /* @__PURE__ */ o("path", { d: "M184,34H72A14,14,0,0,0,58,48V224a6,6,0,0,0,9.18,5.09l60.81-38,60.83,38A6,6,0,0,0,198,224V48A14,14,0,0,0,184,34Zm2,179.17-54.83-34.26a6,6,0,0,0-6.36,0L70,213.17V48a2,2,0,0,1,2-2H184a2,2,0,0,1,2,2Z" }, null, -1), N = [
  C
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M184,32H72A16,16,0,0,0,56,48V224a8,8,0,0,0,12.24,6.78L128,193.43l59.77,37.35A8,8,0,0,0,200,224V48A16,16,0,0,0,184,32Zm0,177.57-51.77-32.35a8,8,0,0,0-8.48,0L72,209.57V48H184Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M184,36H72A12,12,0,0,0,60,48V224a4,4,0,0,0,6.12,3.39L128,188.72l61.89,38.67A4,4,0,0,0,192,228a4.06,4.06,0,0,0,1.94-.5A4,4,0,0,0,196,224V48A12,12,0,0,0,184,36Zm4,180.78-57.89-36.17a4,4,0,0,0-4.24,0L68,216.78V48a4,4,0,0,1,4-4H184a4,4,0,0,1,4,4Z" }, null, -1), j = [
  $
], q = {
  name: "PhBookmarkSimple"
}, G = /* @__PURE__ */ g({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const l = d, c = n("weight", "regular"), _ = n("size", "1em"), h = n("color", "currentColor"), u = n("mirrored", !1), s = i(() => l.weight ?? c), a = i(() => l.size ?? _), p = i(() => l.color ?? h), m = i(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, D) => (t(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: a.value,
      height: a.value,
      fill: p.value,
      transform: m.value
    }, r.$attrs), [
      A(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", f, Z)) : s.value === "duotone" ? (t(), e("g", k, M)) : s.value === "fill" ? (t(), e("g", S, z)) : s.value === "light" ? (t(), e("g", B, N)) : s.value === "regular" ? (t(), e("g", b, P)) : s.value === "thin" ? (t(), e("g", W, j)) : v("", !0)
    ], 16, y));
  }
});
export {
  G as default
};
