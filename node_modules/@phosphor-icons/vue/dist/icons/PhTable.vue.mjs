import { defineComponent as m, inject as H, computed as i, openBlock as t, createElementBlock as e, mergeProps as V, renderSlot as u, createCommentVNode as p, createElementVNode as o } from "vue";
const M = ["width", "height", "fill", "transform"], g = { key: 0 }, y = /* @__PURE__ */ o("path", { d: "M224,44H32A12,12,0,0,0,20,56V192a20,20,0,0,0,20,20H216a20,20,0,0,0,20-20V56A12,12,0,0,0,224,44ZM44,116H76v24H44Zm56,0H212v24H100ZM212,68V92H44V68ZM44,164H76v24H44Zm56,24V164H212v24Z" }, null, -1), f = [
  y
], A = { key: 1 }, w = /* @__PURE__ */ o("path", {
  d: "M88,104v96H32V104Z",
  opacity: "0.2"
}, null, -1), k = /* @__PURE__ */ o("path", { d: "M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM216,64V96H40V64ZM40,160H80v32H40Zm176,32H96V160H216v32Z" }, null, -1), x = [
  w,
  k
], S = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM40,160H80v32H40Zm176,32H96V160H216v32Z" }, null, -1), C = [
  z
], B = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M224,50H32a6,6,0,0,0-6,6V192a14,14,0,0,0,14,14H216a14,14,0,0,0,14-14V56A6,6,0,0,0,224,50ZM38,110H82v36H38Zm56,0H218v36H94ZM218,62V98H38V62ZM38,192V158H82v36H40A2,2,0,0,1,38,192Zm178,2H94V158H218v34A2,2,0,0,1,216,194Z" }, null, -1), N = [
  b
], E = { key: 4 }, P = /* @__PURE__ */ o("path", { d: "M224,48H32a8,8,0,0,0-8,8V192a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A8,8,0,0,0,224,48ZM40,112H80v32H40Zm56,0H216v32H96ZM216,64V96H40V64ZM40,160H80v32H40Zm176,32H96V160H216v32Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M224,52H32a4,4,0,0,0-4,4V192a12,12,0,0,0,12,12H216a12,12,0,0,0,12-12V56A4,4,0,0,0,224,52ZM36,108H84v40H36Zm56,0H220v40H92ZM220,60v40H36V60ZM36,192V156H84v40H40A4,4,0,0,1,36,192Zm180,4H92V156H220v36A4,4,0,0,1,216,196Z" }, null, -1), T = [
  j
], q = {
  name: "PhTable"
}, G = /* @__PURE__ */ m({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(r) {
    const n = r, d = H("weight", "regular"), c = H("size", "1em"), _ = H("color", "currentColor"), h = H("mirrored", !1), s = i(() => n.weight ?? d), a = i(() => n.size ?? c), v = i(() => n.color ?? _), Z = i(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : h ? "scale(-1, 1)" : void 0);
    return (l, D) => (t(), e("svg", V({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: a.value,
      height: a.value,
      fill: v.value,
      transform: Z.value
    }, l.$attrs), [
      u(l.$slots, "default"),
      s.value === "bold" ? (t(), e("g", g, f)) : s.value === "duotone" ? (t(), e("g", A, x)) : s.value === "fill" ? (t(), e("g", S, C)) : s.value === "light" ? (t(), e("g", B, N)) : s.value === "regular" ? (t(), e("g", E, W)) : s.value === "thin" ? (t(), e("g", $, T)) : p("", !0)
    ], 16, M));
  }
});
export {
  G as default
};
