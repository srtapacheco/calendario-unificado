import { defineComponent as m, inject as a, computed as n, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as H, createElementVNode as o } from "vue";
const w = ["width", "height", "fill", "transform"], f = { key: 0 }, V = /* @__PURE__ */ o("path", { d: "M232.49,168.49l-48,48a12,12,0,0,1-17,0l-48-48a12,12,0,1,1,17-17L164,179V76H32a12,12,0,0,1,0-24H176a12,12,0,0,1,12,12V179l27.51-27.52a12,12,0,0,1,17,17Z" }, null, -1), M = [
  V
], k = { key: 1 }, Z = /* @__PURE__ */ o("path", {
  d: "M224,160l-48,48-48-48Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ o("path", { d: "M231.39,156.94A8,8,0,0,0,224,152H184V64a8,8,0,0,0-8-8H32a8,8,0,0,0,0,16H168v80H128a8,8,0,0,0-5.66,13.66l48,48a8,8,0,0,0,11.32,0l48-48A8,8,0,0,0,231.39,156.94ZM176,196.69,147.31,168h57.38Z" }, null, -1), S = [
  Z,
  x
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M229.66,165.66l-48,48a8,8,0,0,1-11.32,0l-48-48A8,8,0,0,1,128,152h40V72H32a8,8,0,0,1,0-16H176a8,8,0,0,1,8,8v88h40a8,8,0,0,1,5.66,13.66Z" }, null, -1), A = [
  C
], B = { key: 3 }, L = /* @__PURE__ */ o("path", { d: "M228.24,164.24l-48,48a6,6,0,0,1-8.48,0l-48-48a6,6,0,1,1,8.48-8.48L170,193.51V70H32a6,6,0,0,1,0-12H176a6,6,0,0,1,6,6V193.51l37.76-37.75a6,6,0,0,1,8.48,8.48Z" }, null, -1), b = [
  L
], E = { key: 4 }, N = /* @__PURE__ */ o("path", { d: "M229.66,165.66l-48,48a8,8,0,0,1-11.32,0l-48-48a8,8,0,0,1,11.32-11.32L168,188.69V72H32a8,8,0,0,1,0-16H176a8,8,0,0,1,8,8V188.69l34.34-34.35a8,8,0,0,1,11.32,11.32Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M226.83,162.83l-48,48a4,4,0,0,1-5.66,0l-48-48a4,4,0,1,1,5.66-5.66L172,198.34V68H32a4,4,0,0,1,0-8H176a4,4,0,0,1,4,4V198.34l41.17-41.17a4,4,0,0,1,5.66,5.66Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowElbowRightDown"
}, F = /* @__PURE__ */ m({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const s = d, c = a("weight", "regular"), h = a("size", "1em"), _ = a("color", "currentColor"), u = a("mirrored", !1), l = n(() => s.weight ?? c), i = n(() => s.size ?? h), p = n(() => s.color ?? _), g = n(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, R) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      y(r.$slots, "default"),
      l.value === "bold" ? (t(), e("g", f, M)) : l.value === "duotone" ? (t(), e("g", k, S)) : l.value === "fill" ? (t(), e("g", z, A)) : l.value === "light" ? (t(), e("g", B, b)) : l.value === "regular" ? (t(), e("g", E, P)) : l.value === "thin" ? (t(), e("g", W, j)) : H("", !0)
    ], 16, w));
  }
});
export {
  F as default
};
