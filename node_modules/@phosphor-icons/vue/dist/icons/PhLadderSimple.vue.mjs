import { defineComponent as p, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as m, renderSlot as H, createCommentVNode as g, createElementVNode as o } from "vue";
const Z = ["width", "height", "fill", "transform"], M = { key: 0 }, y = /* @__PURE__ */ o("path", { d: "M192,20a12,12,0,0,0-12,12V60H76V32a12,12,0,0,0-24,0V224a12,12,0,0,0,24,0V196H180v28a12,12,0,0,0,24,0V32A12,12,0,0,0,192,20ZM180,84v32H76V84ZM76,172V140H180v32Z" }, null, -1), f = [
  y
], w = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M192,32V224H64V32Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M192,24a8,8,0,0,0-8,8V64H72V32a8,8,0,0,0-16,0V224a8,8,0,0,0,16,0V192H184v32a8,8,0,0,0,16,0V32A8,8,0,0,0,192,24Zm-8,56v40H72V80ZM72,176V136H184v40Z" }, null, -1), x = [
  k,
  S
], A = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M192,24a8,8,0,0,0-8,8v8H72V32a8,8,0,0,0-16,0V224a8,8,0,0,0,16,0v-8H184v8a8,8,0,0,0,16,0V32A8,8,0,0,0,192,24ZM176,184H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Zm0-48H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Zm0-48H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ o("path", { d: "M192,26a6,6,0,0,0-6,6V66H70V32a6,6,0,0,0-12,0V224a6,6,0,0,0,12,0V190H186v34a6,6,0,0,0,12,0V32A6,6,0,0,0,192,26Zm-6,52v44H70V78ZM70,178V134H186v44Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ o("path", { d: "M192,24a8,8,0,0,0-8,8V64H72V32a8,8,0,0,0-16,0V224a8,8,0,0,0,16,0V192H184v32a8,8,0,0,0,16,0V32A8,8,0,0,0,192,24Zm-8,56v40H72V80ZM72,176V136H184v40Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M192,28a4,4,0,0,0-4,4V68H68V32a4,4,0,0,0-8,0V224a4,4,0,0,0,8,0V188H188v36a4,4,0,0,0,8,0V32A4,4,0,0,0,192,28Zm-4,48v48H68V76ZM68,180V132H188v48Z" }, null, -1), L = [
  j
], q = {
  name: "PhLadderSimple"
}, G = /* @__PURE__ */ p({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const a = d, c = n("weight", "regular"), h = n("size", "1em"), _ = n("color", "currentColor"), V = n("mirrored", !1), s = i(() => a.weight ?? c), l = i(() => a.size ?? h), v = i(() => a.color ?? _), u = i(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : V ? "scale(-1, 1)" : void 0);
    return (r, D) => (t(), e("svg", m({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: l.value,
      height: l.value,
      fill: v.value,
      transform: u.value
    }, r.$attrs), [
      H(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", M, f)) : s.value === "duotone" ? (t(), e("g", w, x)) : s.value === "fill" ? (t(), e("g", A, C)) : s.value === "light" ? (t(), e("g", B, b)) : s.value === "regular" ? (t(), e("g", E, W)) : s.value === "thin" ? (t(), e("g", $, L)) : g("", !0)
    ], 16, Z));
  }
});
export {
  G as default
};
