import { defineComponent as v, inject as n, computed as a, openBlock as t, createElementBlock as e, mergeProps as m, renderSlot as y, createCommentVNode as A, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, M = /* @__PURE__ */ o("path", { d: "M208.49,184.49l-48,48a12,12,0,0,1-17,0l-48-48a12,12,0,0,1,17-17L140,195V128A84.09,84.09,0,0,0,56,44a12,12,0,0,1,0-24A108.12,108.12,0,0,1,164,128v67l27.51-27.52a12,12,0,0,1,17,17Z" }, null, -1), k = [
  M
], V = { key: 1 }, Z = /* @__PURE__ */ o("path", {
  d: "M200,176l-48,48-48-48Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ o("path", { d: "M207.39,172.94A8,8,0,0,0,200,168H160V128A104.11,104.11,0,0,0,56,24a8,8,0,0,0,0,16,88.1,88.1,0,0,1,88,88v40H104a8,8,0,0,0-5.66,13.66l48,48a8,8,0,0,0,11.32,0l48-48A8,8,0,0,0,207.39,172.94ZM152,212.69,123.31,184h57.38Z" }, null, -1), S = [
  Z,
  x
], z = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M205.66,181.66l-48,48a8,8,0,0,1-11.32,0l-48-48A8,8,0,0,1,104,168h40V128A88.1,88.1,0,0,0,56,40a8,8,0,0,1,0-16A104.11,104.11,0,0,1,160,128v40h40a8,8,0,0,1,5.66,13.66Z" }, null, -1), C = [
  B
], L = { key: 3 }, N = /* @__PURE__ */ o("path", { d: "M204.24,180.24l-48,48a6,6,0,0,1-8.48,0l-48-48a6,6,0,0,1,8.48-8.48L146,209.51V128A90.1,90.1,0,0,0,56,38a6,6,0,0,1,0-12A102.12,102.12,0,0,1,158,128v81.51l37.76-37.75a6,6,0,0,1,8.48,8.48Z" }, null, -1), b = [
  N
], E = { key: 4 }, H = /* @__PURE__ */ o("path", { d: "M205.66,181.66l-48,48a8,8,0,0,1-11.32,0l-48-48a8,8,0,0,1,11.32-11.32L144,204.69V128A88.1,88.1,0,0,0,56,40a8,8,0,0,1,0-16A104.11,104.11,0,0,1,160,128v76.69l34.34-34.35a8,8,0,0,1,11.32,11.32Z" }, null, -1), P = [
  H
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M202.83,178.83l-48,48a4,4,0,0,1-5.66,0l-48-48a4,4,0,0,1,5.66-5.66L148,214.34V128A92.1,92.1,0,0,0,56,36a4,4,0,0,1,0-8A100.11,100.11,0,0,1,156,128v86.34l41.17-41.17a4,4,0,0,1,5.66,5.66Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowBendRightDown"
}, F = /* @__PURE__ */ v({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const s = d, c = n("weight", "regular"), h = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), l = a(() => s.weight ?? c), i = a(() => s.size ?? h), p = a(() => s.color ?? _), g = a(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, R) => (t(), e("svg", m({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      y(r.$slots, "default"),
      l.value === "bold" ? (t(), e("g", w, k)) : l.value === "duotone" ? (t(), e("g", V, S)) : l.value === "fill" ? (t(), e("g", z, C)) : l.value === "light" ? (t(), e("g", L, b)) : l.value === "regular" ? (t(), e("g", E, P)) : l.value === "thin" ? (t(), e("g", W, j)) : A("", !0)
    ], 16, f));
  }
});
export {
  F as default
};
