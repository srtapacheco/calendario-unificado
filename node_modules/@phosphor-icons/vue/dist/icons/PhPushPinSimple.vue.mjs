import { defineComponent as g, inject as h, computed as n, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as m, createCommentVNode as y, createElementVNode as o } from "vue";
const M = ["width", "height", "fill", "transform"], L = { key: 0 }, f = /* @__PURE__ */ o("path", { d: "M216,164h-5.93L190.3,52H192a12,12,0,0,0,0-24H64a12,12,0,0,0,0,24h1.7L45.93,164H40a12,12,0,0,0,0,24h76v52a12,12,0,0,0,24,0V188h76a12,12,0,0,0,0-24ZM90.07,52h75.86L185.7,164H70.3Z" }, null, -1), Z = [
  f
], w = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M200,176H56L80,40h96Z",
  opacity: "0.2"
}, null, -1), V = /* @__PURE__ */ o("path", { d: "M216,168h-9.29L185.54,48H192a8,8,0,0,0,0-16H64a8,8,0,0,0,0,16h6.46L49.29,168H40a8,8,0,0,0,0,16h80v56a8,8,0,0,0,16,0V184h80a8,8,0,0,0,0-16ZM86.71,48h82.58l21.17,120H65.54Z" }, null, -1), S = [
  k,
  V
], x = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M224,176a8,8,0,0,1-8,8H136v56a8,8,0,0,1-16,0V184H40a8,8,0,0,1,0-16h9.29L70.46,48H64a8,8,0,0,1,0-16H192a8,8,0,0,1,0,16h-6.46l21.17,120H216A8,8,0,0,1,224,176Z" }, null, -1), C = [
  z
], B = { key: 3 }, P = /* @__PURE__ */ o("path", { d: "M216,170H205L183.15,46H192a6,6,0,0,0,0-12H64a6,6,0,0,0,0,12h8.85L51,170H40a6,6,0,0,0,0,12h82v58a6,6,0,0,0,12,0V182h82a6,6,0,0,0,0-12ZM85,46H171l21.88,124H63.15Z" }, null, -1), N = [
  P
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M216,168h-9.29L185.54,48H192a8,8,0,0,0,0-16H64a8,8,0,0,0,0,16h6.46L49.29,168H40a8,8,0,0,0,0,16h80v56a8,8,0,0,0,16,0V184h80a8,8,0,0,0,0-16ZM86.71,48h82.58l21.17,120H65.54Z" }, null, -1), W = [
  E
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M216,172H203.36L180.77,44H192a4,4,0,0,0,0-8H64a4,4,0,0,0,0,8H75.23L52.64,172H40a4,4,0,0,0,0,8h84v60a4,4,0,0,0,8,0V180h84a4,4,0,0,0,0-8ZM83.36,44h89.28l22.59,128H60.77Z" }, null, -1), A = [
  j
], q = {
  name: "PhPushPinSimple"
}, G = /* @__PURE__ */ g({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(r) {
    const a = r, d = h("weight", "regular"), c = h("size", "1em"), _ = h("color", "currentColor"), u = h("mirrored", !1), s = n(() => a.weight ?? d), l = n(() => a.size ?? c), H = n(() => a.color ?? _), p = n(() => a.mirrored !== void 0 ? a.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (i, D) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: l.value,
      height: l.value,
      fill: H.value,
      transform: p.value
    }, i.$attrs), [
      m(i.$slots, "default"),
      s.value === "bold" ? (t(), e("g", L, Z)) : s.value === "duotone" ? (t(), e("g", w, S)) : s.value === "fill" ? (t(), e("g", x, C)) : s.value === "light" ? (t(), e("g", B, N)) : s.value === "regular" ? (t(), e("g", b, W)) : s.value === "thin" ? (t(), e("g", $, A)) : y("", !0)
    ], 16, M));
  }
});
export {
  G as default
};
