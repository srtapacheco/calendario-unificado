import { defineComponent as m, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as A, createCommentVNode as y, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, M = /* @__PURE__ */ o("path", { d: "M232.49,160.49l-48,48a12,12,0,0,1-17-17L195,164H128A108.12,108.12,0,0,1,20,56a12,12,0,0,1,24,0,84.09,84.09,0,0,0,84,84h67l-27.52-27.51a12,12,0,0,1,17-17l48,48A12,12,0,0,1,232.49,160.49Z" }, null, -1), k = [
  M
], Z = { key: 1 }, x = /* @__PURE__ */ o("path", {
  d: "M224,152l-48,48V104Z",
  opacity: "0.2"
}, null, -1), H = /* @__PURE__ */ o("path", { d: "M229.66,146.34l-48-48A8,8,0,0,0,168,104v40H128A88.1,88.1,0,0,1,40,56a8,8,0,0,0-16,0A104.11,104.11,0,0,0,128,160h40v40a8,8,0,0,0,13.66,5.66l48-48A8,8,0,0,0,229.66,146.34ZM184,180.69V123.31L212.69,152Z" }, null, -1), S = [
  x,
  H
], V = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M229.66,157.66l-48,48A8,8,0,0,1,168,200V160H128A104.11,104.11,0,0,1,24,56a8,8,0,0,1,16,0,88.1,88.1,0,0,0,88,88h40V104a8,8,0,0,1,13.66-5.66l48,48A8,8,0,0,1,229.66,157.66Z" }, null, -1), B = [
  z
], C = { key: 3 }, L = /* @__PURE__ */ o("path", { d: "M228.24,156.24l-48,48a6,6,0,0,1-8.48-8.48L209.51,158H128A102.12,102.12,0,0,1,26,56a6,6,0,0,1,12,0,90.1,90.1,0,0,0,90,90h81.51l-37.75-37.76a6,6,0,0,1,8.48-8.48l48,48A6,6,0,0,1,228.24,156.24Z" }, null, -1), N = [
  L
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M229.66,157.66l-48,48a8,8,0,0,1-11.32-11.32L204.69,160H128A104.11,104.11,0,0,1,24,56a8,8,0,0,1,16,0,88.1,88.1,0,0,0,88,88h76.69l-34.35-34.34a8,8,0,0,1,11.32-11.32l48,48A8,8,0,0,1,229.66,157.66Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M226.83,154.83l-48,48a4,4,0,0,1-5.66-5.66L214.34,156H128A100.11,100.11,0,0,1,28,56a4,4,0,0,1,8,0,92.1,92.1,0,0,0,92,92h86.34l-41.17-41.17a4,4,0,0,1,5.66-5.66l48,48A4,4,0,0,1,226.83,154.83Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowBendDownRight"
}, F = /* @__PURE__ */ m({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const s = d, c = n("weight", "regular"), h = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), l = i(() => s.weight ?? c), r = i(() => s.size ?? h), p = i(() => s.color ?? _), g = i(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (a, R) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: r.value,
      height: r.value,
      fill: p.value,
      transform: g.value
    }, a.$attrs), [
      A(a.$slots, "default"),
      l.value === "bold" ? (t(), e("g", w, k)) : l.value === "duotone" ? (t(), e("g", Z, S)) : l.value === "fill" ? (t(), e("g", V, B)) : l.value === "light" ? (t(), e("g", C, N)) : l.value === "regular" ? (t(), e("g", b, P)) : l.value === "thin" ? (t(), e("g", W, j)) : y("", !0)
    ], 16, f));
  }
});
export {
  F as default
};
