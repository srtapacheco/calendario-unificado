import { defineComponent as g, inject as i, computed as l, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as f, createElementVNode as o } from "vue";
const A = ["width", "height", "fill", "transform"], Z = { key: 0 }, w = /* @__PURE__ */ o("path", { d: "M128,96a32,32,0,1,0,32,32A32,32,0,0,0,128,96Zm0,40a8,8,0,1,1,8-8A8,8,0,0,1,128,136Z" }, null, -1), M = [
  w
], k = { key: 1 }, x = /* @__PURE__ */ o("path", {
  d: "M152,128a24,24,0,1,1-24-24A24,24,0,0,1,152,128Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M128,96a32,32,0,1,0,32,32A32,32,0,0,0,128,96Zm0,48a16,16,0,1,1,16-16A16,16,0,0,1,128,144Z" }, null, -1), z = [
  x,
  S
], C = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M156,128a28,28,0,1,1-28-28A28,28,0,0,1,156,128Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ o("path", { d: "M128,98a30,30,0,1,0,30,30A30,30,0,0,0,128,98Zm0,48a18,18,0,1,1,18-18A18,18,0,0,1,128,146Z" }, null, -1), P = [
  E
], V = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M128,96a32,32,0,1,0,32,32A32,32,0,0,0,128,96Zm0,48a16,16,0,1,1,16-16A16,16,0,0,1,128,144Z" }, null, -1), $ = [
  W
], j = { key: 5 }, D = /* @__PURE__ */ o("path", { d: "M128,100a28,28,0,1,0,28,28A28,28,0,0,0,128,100Zm0,48a20,20,0,1,1,20-20A20,20,0,0,1,128,148Z" }, null, -1), O = [
  D
], q = {
  name: "PhDotOutline"
}, H = /* @__PURE__ */ g({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const n = d, c = i("weight", "regular"), _ = i("size", "1em"), h = i("color", "currentColor"), u = i("mirrored", !1), s = l(() => n.weight ?? c), r = l(() => n.size ?? _), p = l(() => n.color ?? h), m = l(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (a, F) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: r.value,
      height: r.value,
      fill: p.value,
      transform: m.value
    }, a.$attrs), [
      y(a.$slots, "default"),
      s.value === "bold" ? (t(), e("g", Z, M)) : s.value === "duotone" ? (t(), e("g", k, z)) : s.value === "fill" ? (t(), e("g", C, N)) : s.value === "light" ? (t(), e("g", b, P)) : s.value === "regular" ? (t(), e("g", V, $)) : s.value === "thin" ? (t(), e("g", j, O)) : f("", !0)
    ], 16, A));
  }
});
export {
  H as default
};
