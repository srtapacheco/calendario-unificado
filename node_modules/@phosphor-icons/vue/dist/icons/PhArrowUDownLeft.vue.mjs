import { defineComponent as m, inject as l, computed as n, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as H, createCommentVNode as y, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, M = /* @__PURE__ */ o("path", { d: "M236,112a68.07,68.07,0,0,1-68,68H61l27.52,27.51a12,12,0,0,1-17,17l-48-48a12,12,0,0,1,0-17l48-48a12,12,0,1,1,17,17L61,156H168a44,44,0,0,0,0-88H80a12,12,0,0,1,0-24h88A68.07,68.07,0,0,1,236,112Z" }, null, -1), k = [
  M
], A = { key: 1 }, Z = /* @__PURE__ */ o("path", {
  d: "M80,120v96L32,168Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ o("path", { d: "M168,48H80a8,8,0,0,0,0,16h88a48,48,0,0,1,0,96H88V120a8,8,0,0,0-13.66-5.66l-48,48a8,8,0,0,0,0,11.32l48,48A8,8,0,0,0,88,216V176h80a64,64,0,0,0,0-128ZM72,196.69,43.31,168,72,139.31Z" }, null, -1), L = [
  Z,
  x
], S = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M232,112a64.07,64.07,0,0,1-64,64H88v40a8,8,0,0,1-13.66,5.66l-48-48a8,8,0,0,1,0-11.32l48-48A8,8,0,0,1,88,120v40h80a48,48,0,0,0,0-96H80a8,8,0,0,1,0-16h88A64.07,64.07,0,0,1,232,112Z" }, null, -1), C = [
  z
], B = { key: 3 }, V = /* @__PURE__ */ o("path", { d: "M230,112a62.07,62.07,0,0,1-62,62H46.49l37.75,37.76a6,6,0,1,1-8.48,8.48l-48-48a6,6,0,0,1,0-8.48l48-48a6,6,0,0,1,8.48,8.48L46.49,162H168a50,50,0,0,0,0-100H80a6,6,0,0,1,0-12h88A62.07,62.07,0,0,1,230,112Z" }, null, -1), N = [
  V
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M232,112a64.07,64.07,0,0,1-64,64H51.31l34.35,34.34a8,8,0,0,1-11.32,11.32l-48-48a8,8,0,0,1,0-11.32l48-48a8,8,0,0,1,11.32,11.32L51.31,160H168a48,48,0,0,0,0-96H80a8,8,0,0,1,0-16h88A64.07,64.07,0,0,1,232,112Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M228,112a60.07,60.07,0,0,1-60,60H41.66l41.17,41.17a4,4,0,0,1-5.66,5.66l-48-48a4,4,0,0,1,0-5.66l48-48a4,4,0,0,1,5.66,5.66L41.66,164H168a52,52,0,0,0,0-104H80a4,4,0,0,1,0-8h88A60.07,60.07,0,0,1,228,112Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowUDownLeft"
}, F = /* @__PURE__ */ m({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const s = d, c = l("weight", "regular"), h = l("size", "1em"), _ = l("color", "currentColor"), u = l("mirrored", !1), a = n(() => s.weight ?? c), i = n(() => s.size ?? h), p = n(() => s.color ?? _), g = n(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, U) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      H(r.$slots, "default"),
      a.value === "bold" ? (t(), e("g", w, k)) : a.value === "duotone" ? (t(), e("g", A, L)) : a.value === "fill" ? (t(), e("g", S, C)) : a.value === "light" ? (t(), e("g", B, N)) : a.value === "regular" ? (t(), e("g", b, P)) : a.value === "thin" ? (t(), e("g", W, j)) : y("", !0)
    ], 16, f));
  }
});
export {
  F as default
};
