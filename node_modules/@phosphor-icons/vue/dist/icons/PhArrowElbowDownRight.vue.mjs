import { defineComponent as m, inject as n, computed as a, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as V, createCommentVNode as y, createElementVNode as o } from "vue";
const w = ["width", "height", "fill", "transform"], f = { key: 0 }, H = /* @__PURE__ */ o("path", { d: "M216.49,184.49l-48,48a12,12,0,0,1-17-17L179,188H64a12,12,0,0,1-12-12V32a12,12,0,0,1,24,0V164H179l-27.52-27.51a12,12,0,1,1,17-17l48,48A12,12,0,0,1,216.49,184.49Z" }, null, -1), M = [
  H
], A = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M208,176l-48,48V128Z",
  opacity: "0.2"
}, null, -1), Z = /* @__PURE__ */ o("path", { d: "M213.66,170.34l-48-48A8,8,0,0,0,152,128v40H72V32a8,8,0,0,0-16,0V176a8,8,0,0,0,8,8h88v40a8,8,0,0,0,13.66,5.66l48-48A8,8,0,0,0,213.66,170.34ZM168,204.69V147.31L196.69,176Z" }, null, -1), x = [
  k,
  Z
], S = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M213.66,181.66l-48,48A8,8,0,0,1,152,224V184H64a8,8,0,0,1-8-8V32a8,8,0,0,1,16,0V168h80V128a8,8,0,0,1,13.66-5.66l48,48A8,8,0,0,1,213.66,181.66Z" }, null, -1), C = [
  z
], L = { key: 3 }, B = /* @__PURE__ */ o("path", { d: "M212.24,180.24l-48,48a6,6,0,0,1-8.48-8.48L193.51,182H64a6,6,0,0,1-6-6V32a6,6,0,0,1,12,0V170H193.51l-37.75-37.76a6,6,0,1,1,8.48-8.48l48,48A6,6,0,0,1,212.24,180.24Z" }, null, -1), b = [
  B
], E = { key: 4 }, N = /* @__PURE__ */ o("path", { d: "M213.66,181.66l-48,48a8,8,0,0,1-11.32-11.32L188.69,184H64a8,8,0,0,1-8-8V32a8,8,0,0,1,16,0V168H188.69l-34.35-34.34a8,8,0,0,1,11.32-11.32l48,48A8,8,0,0,1,213.66,181.66Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M210.83,178.83l-48,48a4,4,0,0,1-5.66-5.66L198.34,180H64a4,4,0,0,1-4-4V32a4,4,0,0,1,8,0V172H198.34l-41.17-41.17a4,4,0,1,1,5.66-5.66l48,48A4,4,0,0,1,210.83,178.83Z" }, null, -1), j = [
  $
], D = {
  name: "PhArrowElbowDownRight"
}, F = /* @__PURE__ */ m({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const s = d, c = n("weight", "regular"), h = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), l = a(() => s.weight ?? c), i = a(() => s.size ?? h), p = a(() => s.color ?? _), g = a(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, R) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      V(r.$slots, "default"),
      l.value === "bold" ? (t(), e("g", f, M)) : l.value === "duotone" ? (t(), e("g", A, x)) : l.value === "fill" ? (t(), e("g", S, C)) : l.value === "light" ? (t(), e("g", L, b)) : l.value === "regular" ? (t(), e("g", E, P)) : l.value === "thin" ? (t(), e("g", W, j)) : y("", !0)
    ], 16, w));
  }
});
export {
  F as default
};
