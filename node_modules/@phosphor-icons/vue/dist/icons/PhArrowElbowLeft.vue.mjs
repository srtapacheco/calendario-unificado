import { defineComponent as m, inject as a, computed as n, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as f, createElementVNode as o } from "vue";
const w = ["width", "height", "fill", "transform"], L = { key: 0 }, V = /* @__PURE__ */ o("path", { d: "M240.49,104.49l-96,96a12,12,0,0,1-17,0L36,109v43a12,12,0,0,1-24,0V80A12,12,0,0,1,24,68H96a12,12,0,0,1,0,24H53l83,83,87.51-87.52a12,12,0,0,1,17,17Z" }, null, -1), H = [
  V
], M = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M96,80,24,152V80Z",
  opacity: "0.2"
}, null, -1), Z = /* @__PURE__ */ o("path", { d: "M237.66,90.34a8,8,0,0,0-11.32,0L136,180.69,71.31,116l30.35-30.34A8,8,0,0,0,96,72H24a8,8,0,0,0-8,8v72a8,8,0,0,0,13.66,5.66L60,127.31l70.34,70.35a8,8,0,0,0,11.32,0l96-96A8,8,0,0,0,237.66,90.34ZM32,132.69V88H76.69Z" }, null, -1), x = [
  k,
  Z
], S = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M237.66,101.66l-96,96a8,8,0,0,1-11.32,0L60,127.31,29.66,157.66A8,8,0,0,1,16,152V80a8,8,0,0,1,8-8H96a8,8,0,0,1,5.66,13.66L71.31,116,136,180.69l90.34-90.35a8,8,0,0,1,11.32,11.32Z" }, null, -1), A = [
  z
], C = { key: 3 }, B = /* @__PURE__ */ o("path", { d: "M236.24,100.24l-96,96a6,6,0,0,1-8.48,0L30,94.48V152a6,6,0,0,1-12,0V80a6,6,0,0,1,6-6H96a6,6,0,0,1,0,12H38.48L136,183.51l91.76-91.75a6,6,0,0,1,8.48,8.48Z" }, null, -1), b = [
  B
], E = { key: 4 }, N = /* @__PURE__ */ o("path", { d: "M237.66,101.66l-96,96a8,8,0,0,1-11.32,0L32,99.31V152a8,8,0,0,1-16,0V80a8,8,0,0,1,8-8H96a8,8,0,0,1,0,16H43.31L136,180.69l90.34-90.35a8,8,0,0,1,11.32,11.32Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M234.83,98.83l-96,96a4,4,0,0,1-5.66,0L28,89.66V152a4,4,0,0,1-8,0V80a4,4,0,0,1,4-4H96a4,4,0,0,1,0,8H33.66L136,186.34l93.17-93.17a4,4,0,1,1,5.66,5.66Z" }, null, -1), j = [
  $
], q = {
  name: "PhArrowElbowLeft"
}, G = /* @__PURE__ */ m({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const l = d, c = a("weight", "regular"), _ = a("size", "1em"), h = a("color", "currentColor"), u = a("mirrored", !1), s = n(() => l.weight ?? c), i = n(() => l.size ?? _), p = n(() => l.color ?? h), g = n(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, D) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      y(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", L, H)) : s.value === "duotone" ? (t(), e("g", M, x)) : s.value === "fill" ? (t(), e("g", S, A)) : s.value === "light" ? (t(), e("g", C, b)) : s.value === "regular" ? (t(), e("g", E, P)) : s.value === "thin" ? (t(), e("g", W, j)) : f("", !0)
    ], 16, w));
  }
});
export {
  G as default
};
