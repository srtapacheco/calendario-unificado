{"ast":null,"code":"export default {\n  data() {\n    return {\n      userName: \"Fulano de tal\",\n      profileOptions: []\n    };\n  },\n  created() {\n    // Verificar o tipo de usuário\n    const userType = this.getUserType();\n\n    // Definir as opções do objeto profileOptions com base no tipo de usuário\n    if (userType === 'tipo1') {\n      this.profileOptions = [{\n        opcao: 'Opção 1',\n        icon: 'mdi mdi-icon1'\n      }, {\n        opcao: 'Opção 2',\n        icon: 'mdi mdi-icon2'\n      }];\n    } else if (userType === 'tipo2') {\n      this.profileOptions = [{\n        opcao: 'Opção 3',\n        icon: 'mdi mdi-icon3'\n      }, {\n        opcao: 'Opção 4',\n        icon: 'mdi mdi-icon4'\n      }];\n    } else {\n      // Caso o tipo de usuário não seja identificado, definir opções padrão\n      this.profileOptions = [{\n        opcao: 'Opção Padrão 1',\n        icon: 'mdi mdi-default-icon1'\n      }, {\n        opcao: 'Opção Padrão 2',\n        icon: 'mdi mdi-default-icon2'\n      }];\n    }\n  },\n  methods: {\n    getUserType() {\n      // Lógica para obter o tipo de usuário\n      // Pode ser uma chamada a uma API, consulta a um banco de dados, etc.\n      // Retorne o tipo de usuário identificado\n      return 'tipo1';\n    },\n    cardClicked(option) {\n      // Lógica do clique no card\n      console.log(\"Card clicado:\", option);\n    }\n  }\n};","map":{"version":3,"names":["data","userName","profileOptions","created","userType","getUserType","opcao","icon","methods","cardClicked","option","console","log"],"sources":["/home/karen/projetos/calendario-unificado/front-end/src/pages/HomePage/HomePage.vue"],"sourcesContent":["<template>\n  <div class=\"external\">\n    <div class=\"container\">\n      <h1>Olá</h1>\n      <h2>{{ userName }}</h2>\n\n      <div class=\"container-options\">\n        <p>Escolha como quer entrar</p>\n        <div class=\"card-container\">\n          <v-card class=\"custom-card\" v-for=\"option in profileOptions\" :key=\"option.opcao\" @click=\"cardClicked(option)\">\n       \n              <v-list-item class=\"custom-list\">\n                <v-list-item-icon>\n                  <i :class=\"['custom-icon', option.icon]\"></i>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title class=\"custom-title\">{{ option.opcao }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n        \n          </v-card>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      userName: \"Fulano de tal\",\n      profileOptions: [],\n    };\n  },\n  created() {\n    // Verificar o tipo de usuário\n    const userType = this.getUserType();\n\n    // Definir as opções do objeto profileOptions com base no tipo de usuário\n    if (userType === 'tipo1') {\n      this.profileOptions = [\n        { opcao: 'Opção 1', icon: 'mdi mdi-icon1' },\n        { opcao: 'Opção 2', icon: 'mdi mdi-icon2' },\n      ];\n    } else if (userType === 'tipo2') {\n      this.profileOptions = [\n        { opcao: 'Opção 3', icon: 'mdi mdi-icon3' },\n        { opcao: 'Opção 4', icon: 'mdi mdi-icon4' },\n      ];\n    } else {\n      // Caso o tipo de usuário não seja identificado, definir opções padrão\n      this.profileOptions = [\n        { opcao: 'Opção Padrão 1', icon: 'mdi mdi-default-icon1' },\n        { opcao: 'Opção Padrão 2', icon: 'mdi mdi-default-icon2' },\n      ];\n    }\n  },\n  methods: {\n    getUserType() {\n      // Lógica para obter o tipo de usuário\n      // Pode ser uma chamada a uma API, consulta a um banco de dados, etc.\n      // Retorne o tipo de usuário identificado\n      return 'tipo1';\n    },\n    cardClicked(option) {\n      // Lógica do clique no card\n      console.log(\"Card clicado:\", option);\n    },\n  },\n};\n\n</script>\n\n<style src=\"./style.css\"></style>\n"],"mappings":"AA4BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,eAAe;MACzBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,QAAO,GAAI,IAAI,CAACC,WAAW,CAAC,CAAC;;IAEnC;IACA,IAAID,QAAO,KAAM,OAAO,EAAE;MACxB,IAAI,CAACF,cAAa,GAAI,CACpB;QAAEI,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAgB,CAAC,EAC3C;QAAED,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAgB,CAAC,CAC5C;IACH,OAAO,IAAIH,QAAO,KAAM,OAAO,EAAE;MAC/B,IAAI,CAACF,cAAa,GAAI,CACpB;QAAEI,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAgB,CAAC,EAC3C;QAAED,KAAK,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAgB,CAAC,CAC5C;IACH,OAAO;MACL;MACA,IAAI,CAACL,cAAa,GAAI,CACpB;QAAEI,KAAK,EAAE,gBAAgB;QAAEC,IAAI,EAAE;MAAwB,CAAC,EAC1D;QAAED,KAAK,EAAE,gBAAgB;QAAEC,IAAI,EAAE;MAAwB,CAAC,CAC3D;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACPH,WAAWA,CAAA,EAAG;MACZ;MACA;MACA;MACA,OAAO,OAAO;IAChB,CAAC;IACDI,WAAWA,CAACC,MAAM,EAAE;MAClB;MACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAAC;IACtC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}