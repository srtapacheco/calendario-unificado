import { defineComponent as m, inject as i, computed as l, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as f, createElementVNode as o } from "vue";
const w = ["width", "height", "fill", "transform"], M = { key: 0 }, k = /* @__PURE__ */ o("path", { d: "M144,128a16,16,0,1,1-16-16A16,16,0,0,1,144,128Z" }, null, -1), A = [
  k
], Z = { key: 1 }, x = /* @__PURE__ */ o("path", {
  d: "M176,128a48,48,0,1,1-48-48A48,48,0,0,1,176,128Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M140,128a12,12,0,1,1-12-12A12,12,0,0,1,140,128Z" }, null, -1), z = [
  x,
  S
], C = { key: 2 }, B = /* @__PURE__ */ o("path", { d: "M128,80a48,48,0,1,0,48,48A48,48,0,0,0,128,80Zm0,60a12,12,0,1,1,12-12A12,12,0,0,1,128,140Z" }, null, -1), N = [
  B
], b = { key: 3 }, E = /* @__PURE__ */ o("path", { d: "M138,128a10,10,0,1,1-10-10A10,10,0,0,1,138,128Z" }, null, -1), P = [
  E
], V = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M140,128a12,12,0,1,1-12-12A12,12,0,0,1,140,128Z" }, null, -1), $ = [
  W
], j = { key: 5 }, D = /* @__PURE__ */ o("path", { d: "M136,128a8,8,0,1,1-8-8A8,8,0,0,1,136,128Z" }, null, -1), q = [
  D
], F = {
  name: "PhDot"
}, I = /* @__PURE__ */ m({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(c) {
    const n = c, a = i("weight", "regular"), _ = i("size", "1em"), h = i("color", "currentColor"), u = i("mirrored", !1), s = l(() => n.weight ?? a), r = l(() => n.size ?? _), p = l(() => n.color ?? h), g = l(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (d, G) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: r.value,
      height: r.value,
      fill: p.value,
      transform: g.value
    }, d.$attrs), [
      y(d.$slots, "default"),
      s.value === "bold" ? (t(), e("g", M, A)) : s.value === "duotone" ? (t(), e("g", Z, z)) : s.value === "fill" ? (t(), e("g", C, N)) : s.value === "light" ? (t(), e("g", b, P)) : s.value === "regular" ? (t(), e("g", V, $)) : s.value === "thin" ? (t(), e("g", j, q)) : f("", !0)
    ], 16, w));
  }
});
export {
  I as default
};
