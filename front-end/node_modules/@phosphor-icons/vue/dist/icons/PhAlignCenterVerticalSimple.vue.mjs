import { defineComponent as v, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as m, renderSlot as g, createCommentVNode as V, createElementVNode as o } from "vue";
const y = ["width", "height", "fill", "transform"], f = { key: 0 }, Z = /* @__PURE__ */ o("path", { d: "M208,116H180V48a20,20,0,0,0-20-20H96A20,20,0,0,0,76,48v68H48a12,12,0,0,0,0,24H76v68a20,20,0,0,0,20,20h64a20,20,0,0,0,20-20V140h28a12,12,0,0,0,0-24Zm-52,88H100V52h56Z" }, null, -1), w = [
  Z
], A = { key: 1 }, M = /* @__PURE__ */ o("path", {
  d: "M168,48V208a8,8,0,0,1-8,8H96a8,8,0,0,1-8-8V48a8,8,0,0,1,8-8h64A8,8,0,0,1,168,48Z",
  opacity: "0.2"
}, null, -1), k = /* @__PURE__ */ o("path", { d: "M208,120H176V48a16,16,0,0,0-16-16H96A16,16,0,0,0,80,48v72H48a8,8,0,0,0,0,16H80v72a16,16,0,0,0,16,16h64a16,16,0,0,0,16-16V136h32a8,8,0,0,0,0-16Zm-48,88H96V48h64Z" }, null, -1), S = [
  M,
  k
], x = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M216,128a8,8,0,0,1-8,8H176v72a16,16,0,0,1-16,16H96a16,16,0,0,1-16-16V136H48a8,8,0,0,1,0-16H80V48A16,16,0,0,1,96,32h64a16,16,0,0,1,16,16v72h32A8,8,0,0,1,216,128Z" }, null, -1), z = [
  C
], B = { key: 3 }, N = /* @__PURE__ */ o("path", { d: "M208,122H174V48a14,14,0,0,0-14-14H96A14,14,0,0,0,82,48v74H48a6,6,0,0,0,0,12H82v74a14,14,0,0,0,14,14h64a14,14,0,0,0,14-14V134h34a6,6,0,0,0,0-12Zm-46,86a2,2,0,0,1-2,2H96a2,2,0,0,1-2-2V48a2,2,0,0,1,2-2h64a2,2,0,0,1,2,2Z" }, null, -1), b = [
  N
], E = { key: 4 }, P = /* @__PURE__ */ o("path", { d: "M208,120H176V48a16,16,0,0,0-16-16H96A16,16,0,0,0,80,48v72H48a8,8,0,0,0,0,16H80v72a16,16,0,0,0,16,16h64a16,16,0,0,0,16-16V136h32a8,8,0,0,0,0-16Zm-48,88H96V48h64Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M208,124H172V48a12,12,0,0,0-12-12H96A12,12,0,0,0,84,48v76H48a4,4,0,0,0,0,8H84v76a12,12,0,0,0,12,12h64a12,12,0,0,0,12-12V132h36a4,4,0,0,0,0-8Zm-44,84a4,4,0,0,1-4,4H96a4,4,0,0,1-4-4V48a4,4,0,0,1,4-4h64a4,4,0,0,1,4,4Z" }, null, -1), q = [
  j
], D = {
  name: "PhAlignCenterVerticalSimple"
}, I = /* @__PURE__ */ v({
  ...D,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(r) {
    const s = r, c = n("weight", "regular"), d = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), a = i(() => s.weight ?? c), h = i(() => s.size ?? d), H = i(() => s.color ?? _), p = i(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (l, F) => (t(), e("svg", m({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: h.value,
      height: h.value,
      fill: H.value,
      transform: p.value
    }, l.$attrs), [
      g(l.$slots, "default"),
      a.value === "bold" ? (t(), e("g", f, w)) : a.value === "duotone" ? (t(), e("g", A, S)) : a.value === "fill" ? (t(), e("g", x, z)) : a.value === "light" ? (t(), e("g", B, b)) : a.value === "regular" ? (t(), e("g", E, W)) : a.value === "thin" ? (t(), e("g", $, q)) : V("", !0)
    ], 16, y));
  }
});
export {
  I as default
};
