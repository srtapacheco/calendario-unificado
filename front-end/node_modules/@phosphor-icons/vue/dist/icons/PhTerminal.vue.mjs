import { defineComponent as m, inject as a, computed as n, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as M, createElementVNode as o } from "vue";
const Z = ["width", "height", "fill", "transform"], f = { key: 0 }, w = /* @__PURE__ */ o("path", { d: "M120,137,48,201A12,12,0,1,1,32,183l61.91-55L32,73A12,12,0,1,1,48,55l72,64A12,12,0,0,1,120,137Zm96,43H120a12,12,0,0,0,0,24h96a12,12,0,0,0,0-24Z" }, null, -1), A = [
  w
], H = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M216,72V192H40V64H208A8,8,0,0,1,216,72Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ o("path", { d: "M117.31,134l-72,64a8,8,0,1,1-10.63-12L100,128,34.69,70A8,8,0,1,1,45.32,58l72,64a8,8,0,0,1,0,12ZM216,184H120a8,8,0,0,0,0,16h96a8,8,0,0,0,0-16Z" }, null, -1), L = [
  k,
  x
], S = { key: 2 }, V = /* @__PURE__ */ o("path", { d: "M216,40H40A16,16,0,0,0,24,56V200a16,16,0,0,0,16,16H216a16,16,0,0,0,16-16V56A16,16,0,0,0,216,40ZM77.66,173.66a8,8,0,0,1-11.32-11.32L100.69,128,66.34,93.66A8,8,0,0,1,77.66,82.34l40,40a8,8,0,0,1,0,11.32ZM192,176H128a8,8,0,0,1,0-16h64a8,8,0,0,1,0,16Z" }, null, -1), z = [
  V
], C = { key: 3 }, B = /* @__PURE__ */ o("path", { d: "M116,132.48l-72,64a6,6,0,0,1-8-9L103,128,36,68.49a6,6,0,0,1,8-9l72,64a6,6,0,0,1,0,9ZM216,186H120a6,6,0,0,0,0,12h96a6,6,0,0,0,0-12Z" }, null, -1), N = [
  B
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M117.31,134l-72,64a8,8,0,1,1-10.63-12L100,128,34.69,70A8,8,0,1,1,45.32,58l72,64a8,8,0,0,1,0,12ZM216,184H120a8,8,0,0,0,0,16h96a8,8,0,0,0,0-16Z" }, null, -1), P = [
  E
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M116,128a4,4,0,0,1-1.34,3l-72,64a4,4,0,1,1-5.32-6L106,128,37.34,67a4,4,0,0,1,5.32-6l72,64A4,4,0,0,1,116,128Zm100,60H120a4,4,0,0,0,0,8h96a4,4,0,0,0,0-8Z" }, null, -1), j = [
  $
], T = {
  name: "PhTerminal"
}, F = /* @__PURE__ */ m({
  ...T,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const l = d, c = a("weight", "regular"), h = a("size", "1em"), _ = a("color", "currentColor"), u = a("mirrored", !1), s = n(() => l.weight ?? c), i = n(() => l.size ?? h), p = n(() => l.color ?? _), g = n(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, q) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      y(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", f, A)) : s.value === "duotone" ? (t(), e("g", H, L)) : s.value === "fill" ? (t(), e("g", S, z)) : s.value === "light" ? (t(), e("g", C, N)) : s.value === "regular" ? (t(), e("g", b, P)) : s.value === "thin" ? (t(), e("g", W, j)) : M("", !0)
    ], 16, Z));
  }
});
export {
  F as default
};
